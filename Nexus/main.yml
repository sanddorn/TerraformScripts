- hosts: all
  vars_files:
    - vars/nexus.yml
    - vars/nexus-secrets.yml
  tasks:
    - name: install extra packets
      become: yes
      apt:
        name:
          - openjdk-8-jdk
          - nginx
          - certbot
          - python3-certbot-nginx
        state: latest

    - name: Set Nexus URL
      set_fact:
        nexus_url: "https://{{ nexus_base_name }}"

    - name: Create Nexus User
      become: yes
      user:
        name: nexus
        shell: /bin/bash
        home: /home/nexus
        createhome: yes
        system: yes
        state: present

    - name: Download Nexus
      get_url:
        url: "https://download.sonatype.com/nexus/3/nexus-{{ nexus_version }}-unix.tar.gz"
        dest: "/tmp/nexus-{{ nexus_version }}-unix.tar.gz"
        checksum: sha1:5c612608df890ba56b2bd9e66960754bbfe5fcf3

    - name: Extract Nexus
      become: yes
      unarchive:
        src: "/tmp/nexus-{{ nexus_version }}-unix.tar.gz"
        dest: /opt
        remote_src: yes

    - name: Configure Nexus Properties
      become: yes
      template:
        src: templates/nexus.properties.j2
        dest: "/opt/nexus-{{ nexus_version }}/etc/nexus.properties"

    - name: Change owner of nexus working dir
      become: yes
      file:
        path: /opt/sonatype-work/nexus3
        owner: nexus
        group: nexus
        recurse: yes

    - name: Checkout Config-As-Code Plugin
      become: yes
      ansible.builtin.git:
        repo: https://github.com/AdaptiveConsulting/nexus-casc-plugin.git
        dest: /usr/src/nexus-casc-plugin
        version: "v{{ nexus_version }}.0"

    - name: Build Config-As-Code Plugin
      become: yes
      shell: /usr/src/nexus-casc-plugin/mvnw package
      args:
        chdir: /usr/src/nexus-casc-plugin
        creates: "/usr/src/nexus-casc-plugin/target/nexus-casc-plugin-{{ nexus_version }}-bundle.kar"

    - name: Copy Config-As-Code Plugin
      become: yes
      copy:
        src: "/usr/src/nexus-casc-plugin/target/nexus-casc-plugin-{{ nexus_version }}-bundle.kar"
        dest: "/opt/nexus-{{ nexus_version }}/deploy/nexus-casc-plugin-{{ nexus_version }}-bundle.kar"
        owner: nexus
        group: nexus
        remote_src: yes

    # Config vom Nexus.
    - name: Create Config-As-Code
      become: yes
      template:
        src: templates/nexus-casc.yml.j2
        dest: /opt/nexus.yml


    - name: Create Nexus Service
      become: yes
      template:
        src: templates/nexus.service.j2
        dest: /etc/systemd/system/nexus.service
        mode: 0644

    - name: Start Nexus
      become: yes
      systemd:
        name: nexus
        state: started
        enabled: yes

    - name: Configure Nginx
      become: yes
      template:
        src: templates/nexus.nginx.conf-pre-certbot.j2
        dest: /etc/nginx/sites-available/nexus
        mode: 0644

    - name: Remove default nginx config
      become: yes
      file:
        name: /etc/nginx/sites-enabled/default
        state: absent

    - name: Enable Nexus Nginx Config
      become: yes
      file:
        src: /etc/nginx/sites-available/nexus
        dest: /etc/nginx/sites-enabled/nexus
        state: link

    - name: Restart Nginx
      become: yes
      systemd:
        name: nginx
        state: restarted
        enabled: yes

    - name: Install certificate
      become: yes
      shell: certbot run --nginx -d {{ nexus_base_name }} --agree-tos --email nils.bokermann+certbot@bermuda.de --non-interactive
      args:
        creates: /etc/letsencrypt/live/{{ nexus_base_name }}/fullchain.pem
      ignore_errors: yes

    - name: Generate dhparams
      become: yes
      shell: openssl dhparam -out /etc/ssl/dhparams4096.pem 4096
      args:
        creates: /etc/ssl/dhparams4096.pem

    - name: Configure Nginx Final
      become: yes
      template:
        src: templates/nexus.nginx.conf.j2
        dest: /etc/nginx/sites-available/nexus
        mode: 0644

    - name: Reload nginx to activate specified site
      become: yes
      service:
        name: nginx
        state: restarted

    - name: Add letsencrypt cronjob for cert renewal
      become: yes
      cron:
        name: letsencrypt_renewal
        special_time: weekly
        job: letsencrypt --renew -n --nginx
